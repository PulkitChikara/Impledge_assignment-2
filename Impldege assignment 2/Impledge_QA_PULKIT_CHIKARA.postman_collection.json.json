{
	"info": {
		"_postman_id": "6d8e79af-c55e-4279-899c-32c925f28a60",
		"name": "Impledge_QA_Exercise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33809572"
	},
	"item": [
		{
			"name": "Address - Verify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body has errors\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"ADDRESS.VERIFY.FAILURE\");\r",
							"});\r",
							"pm.test(\"Response does not include ZIP code\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"06810\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "jBucTRfsQP5eAweqv7JQrA",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\r\n    \"company\": \"Residence Inn\",\r\n    \"street1\": \"22 Segar St\",\r\n    \"street2\": \"\",\r\n    \"city\": \"Danbury\",\r\n    \"country\": \"US\",\r\n    \"phone\": \"855-782-3877\",\r\n    \"email\": \"shipper@mailinator.com\"\r\n  }"
				},
				"url": {
					"raw": "https://api.easypost.com/v2/addresses?verify_strict[]=delivery",
					"protocol": "https",
					"host": [
						"api",
						"easypost",
						"com"
					],
					"path": [
						"v2",
						"addresses"
					],
					"query": [
						{
							"key": "verify_strict[]",
							"value": "delivery"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Shipment Details",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify selected_rate.retail_rate is equal to 12\", function () {\r",
							"    const retailRate = parseFloat(pm.response.json().selected_rate.retail_rate);\r",
							"    pm.expect(retailRate).to.equal(12.00);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify retail_rate is greater than list_rate\", function () {\r",
							"    const response = pm.response.json();\r",
							"    console.log(\"Response:\", response);\r",
							"\r",
							"    // Parse retail_rate as a number\r",
							"    const retailRate = parseFloat(response.selected_rate.retail_rate);\r",
							"\r",
							"    if (!isNaN(retailRate)) {\r",
							"        // Check if list_rate property exists in the response\r",
							"        if (response.hasOwnProperty(\"list_rate\")) {\r",
							"            const listRate = parseFloat(response.list_rate);\r",
							"            // Check if listRate is a valid number\r",
							"            if (!isNaN(listRate)) {\r",
							"                // Check if retailRate is greater than listRate\r",
							"                pm.expect(retailRate).to.be.above(listRate);\r",
							"            } else {\r",
							"                pm.expect.fail(`Invalid value for list_rate (${response.list_rate})`);\r",
							"            }\r",
							"        } else {\r",
							"            console.log(\"list_rate property is not present in the response\");\r",
							"            // Consider the test case as passed or provide a custom error message\r",
							"            pm.expect(true).to.be.true; // You can also use pm.expect(true).to.be.true; to pass the test case\r",
							"        }\r",
							"    } else {\r",
							"        pm.expect.fail(`Invalid value for retail_rate (${response.selected_rate.retail_rate})`);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.easypost.com/v2/shipments/shp_e0b570fd1d7d4b62bd206917eae5881a",
					"protocol": "https",
					"host": [
						"api",
						"easypost",
						"com"
					],
					"path": [
						"v2",
						"shipments",
						"shp_e0b570fd1d7d4b62bd206917eae5881a"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "EZTK0126bfcd0c834208b2289e3c501630d7IMAAxVrGZ2G1UXCmomm4Pw",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}